module processing(
	input[11:0] data_in,
	input active,
	input switch,
	output[11:0] data_out
);
parameter normal = 0;
parameter grayscale = 1;

reg[3:0] r, g, b;
reg[11:0] gray;
reg mode;

always@* begin
	if(active) begin
		case(mode)
			0: begin
				r <= data_in[11:8];
				g <= data_in[7:4];
				b <= data_in[3:0];
			end
			1: begin
				r <= data_in[11:8];
				g <= data_in[7:4];
				b <= data_in[3:0];
				gray <= ((r + g + b) << 1 - (r + g + b));	//r+g+b / 3 
			end
		endcase
	end
end
always@(posedge switch) begin
	if(switch) begin
		case(mode) begin
			0: mode <= 1;
			1: mode <= 0;
			default: mode <= 0;
		endcase
	end
end

assign data_out = {r, g, b};

endmodule