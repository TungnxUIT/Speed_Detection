module speed_module#(
	parameter width = 9,
	parameter depth = 9
)
(
	input 					clk,
	input 					rst_n,
	input 					start,
	input[depth - 1:0]	i_rdaddr_speed,
	input[width - 1:0] 	i_car,
	output[width - 1:0] 	o_speed,
	output[depth - 1:0] 	o_id,
	output[width - 1:0]x, y
);

localparam location_depth = depth + 1;

wire[width - 1:	      0] x_data, y_data, x_mem, y_mem, speed_data, id_data;
wire[location_depth:		0] x_addr, y_addr;
wire								wen_location, wen_speed;

speed#(.width(width), .depth(depth)) inst_speed
(
	.clk(clk),
	.rst_n(rst_n),
	.start(start),
	.i_car(i_car),	
	.i_x(x_data),
	.i_y(y_data),
	.o_x(x_mem),
	.o_y(y_mem),
	.o_idx(x_addr),
	.o_idy(y_addr),
	.o_speed(speed_data),
	.o_id(id_data),
	.o_wen_speed(wen_speed),
	.o_wen_location(wen_location),
	//.x(x), .y(y)
);

location_mem#(.width(width), .depth(location_depth)) inst_location_mem(
	.clk(clk),
	.rst_n(rst_n),
	.i_a(x_mem),
	.i_b(y_mem),
	.i_addr_a(x_addr),
	.i_addr_b(y_addr),
	.wen(wen_location),
	.o_a(x_data),
	.o_b(y_data)
);

speed_mem#(.width(width), .depth(depth)) inst_speed_mem(
	.clk(clk),
	.rst_n(rst_n),
	.i_speed(speed_data),
	.i_addr_speed(id_data),
	.i_rdaddr_speed(i_rdaddr_speed),
	.wen(wen_speed),
	.o_speed(o_speed),
	.o_id(o_id)
);


endmodule